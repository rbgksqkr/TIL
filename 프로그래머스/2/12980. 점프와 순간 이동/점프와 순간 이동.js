// 점프 : K칸 앞으로 점프
// 순간이동 : (현재까지 온 거리) x 2
// 앞으로 K 칸 점프하면 K 만큼 건전지 사용 <-> 순간 이동 무료
// 거리가 N 만큼 떨어진 장소로 이동
// TODO: N 만큼 이동할 때 건전지 사용량의 최솟값
// dp[i] = i 만큼 이동했을 때 최솟값

// 메모리 초과 : N이 10억이라서 터진듯.
// dp나 탐색이 아닌 다른 방법
// 순간이동 무조건 하는 게 좋음 -> n부터 내려가기
function solution(n) {
    let answer = 0;
    while(n > 0) {
        if(n % 2 === 0) {
            n /= 2;
        } else {
            n--;
            answer++;
        }
    }
    
    return answer;
}