# --- 요구 사항 ---
# 45656이란 수를 보자.
# 인접한 모든 자리의 차이가 1 : 계단 수
# TODO: N이 주어질 때, 길이가 N인 계단 수 몇 개? 0으로 시작하는 수는 계단수가 아니다.
# 정답을 1,000,000,000으로 나눈 나머지를 출력

# --- 풀이 방법 ---
# 1 : 1 2 3 4 5 6 7 8 9
# 2 : 10 12 21 23 32 34 43 45 ... 87 89 98
# 3 : 101 121 123 210 212 232 234 ...

# dp[i][j] : i 길이의 마지막 자릿수가 j일 때의 계단수 개수

# 어떤 규칙 : n-1 에서 계산한 거에 -1 인덱스와 +1 인덱스 추가
# 0 : 1개
# 1~8 : 2개
# 9 : 1개
# 어떤 값을 저장할 것인가?

# j=0 : dp[i][j] = dp[i-1][j] + 1
# j=1~8 : dp[i][j] = dp[i-1][j-1] + dp[i-1]
# j=9 : dp[i][j] = dp[i-1][j] + 1

import sys
input = sys.stdin.readline

n = int(input())

dp = [[0]*10 for _ in range(n+1)]

for i in range(1, 10):
    dp[1][i] = 1

for i in range(2, n+1):
    dp[i][0] = dp[i-1][1]
    dp[i][9] = dp[i-1][8]

    for j in range(1, 9):
        dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]

print(sum(dp[n]) % 1000000000)
